{"mappings":"AAAA,MAAM,SAAS;AAEf,SAAS,SAAS,KAAK,EAAE,QAAQ;IAC7B,MAAM,QAAQ;QACV,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAS;IAC3C,GACK,IAAI,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM;QAEpB,OAAO,SAAS,IAAI;IACxB,GACC,IAAI,CAAC,CAAA;QACF,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,MAAM;IACV,GACC,KAAK,CAAC,CAAA,QAAS,QAAQ,KAAK,CAAC,UAAU;AAChD;AAEA,SAAS,cAAc,CAAC,aAAa,gBAAgB,CAAC,SAAS;IAC3D,MAAM,QACD,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;QACF,MAAM,YAAY,SAAS,cAAc,CAAC;QAC1C,UAAU,SAAS,GAAG;QACtB,KAAK,OAAO,CAAC,CAAA;YACT,MAAM,MAAM,SAAS,aAAa,CAAC;YACnC,IAAI,SAAS,GAAG,CAAC;wBACT,EAAE,MAAM,EAAE,CAAC;wBACX,EAAE,MAAM,KAAK,CAAC;wBACd,EAAE,MAAM,QAAQ,CAAC;;qDAEY,EAAE,MAAM,EAAE,CAAC;mDACb,EAAE,MAAM,EAAE,CAAC;qDACT,EAAE,MAAM,EAAE,CAAC;;gBAEhD,CAAC;YACD,UAAU,WAAW,CAAC;QAC1B;IACJ;AACR;AAEA,SAAS,cAAc,CAAC,YAAY,gBAAgB,CAAC,SAAS;IAC1D,MAAM,QAAQ,SAAS,cAAc,CAAC,SAAS,KAAK;IACpD,MAAM,WAAW,SAAS,cAAc,CAAC,YAAY,KAAK;IAE1D,MAAM,QAAQ;QACV,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAS;IAC3C,GACK,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC;QACF,MAAM;QACN,SAAS,cAAc,CAAC,aAAa,KAAK;IAC9C;AACR;AAEA,SAAS,YAAY,EAAE;IACnB,MAAM,WAAW,OAAO;IACxB,MAAM,cAAc,OAAO;IAE3B,MAAM,GAAG,OAAO,CAAC,EAAE,IAAI,EAAE;QACrB,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE,OAAO;YAAU,UAAU;QAAY;IAClE,GACK,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC;QACF,MAAM;QACN,SAAS,cAAc,CAAC,aAAa,KAAK;IAC9C;AACR;AAEA,SAAS,UAAU,EAAE;IACjB,MAAM,WAAW,OAAO;IAExB,MAAM,YAAY,CAAC;IACnB,IAAI,UAAU,UAAU,KAAK,GAAG;IAEhC,MAAM,GAAG,OAAO,CAAC,EAAE,IAAI,EAAE;QACrB,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;IACzB,GACK,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC;QACF,MAAM;QACN,SAAS,cAAc,CAAC,aAAa,KAAK;IAC9C;AACR;AAEA,SAAS,YAAY,EAAE;IACnB,IAAI,QAAQ,gDACR,MAAM,GAAG,OAAO,CAAC,EAAE,IAAI,EAAE;QACrB,QAAQ;IACZ,GACK,IAAI,CAAC;QACF,MAAM;QACN,SAAS,cAAc,CAAC,aAAa,KAAK;IAC9C;AAEZ","sources":["src/index.js"],"sourcesContent":["const apiUrl = 'http://localhost:3000/movies';\r\n\r\nfunction addMovie(title, director) {\r\n    fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ title, director }),\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to add movie');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Movie added:', data);\r\n            alert('Movie added successfully!');\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n}\r\n\r\ndocument.getElementById('getMovies').addEventListener('click', function() {\r\n    fetch(apiUrl)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const tableBody = document.getElementById('moviesTable');\r\n            tableBody.innerHTML = '';\r\n            data.forEach(movie => {\r\n                const row = document.createElement('tr');\r\n                row.innerHTML = `\r\n                    <td>${movie.id}</td>\r\n                    <td>${movie.title}</td>\r\n                    <td>${movie.director}</td>\r\n                    <td>\r\n                        <button onclick=\"updateMovie(${movie.id})\">Update</button>\r\n                        <button onclick=\"editMovie(${movie.id})\">Edit</button>\r\n                        <button onclick=\"deleteMovie(${movie.id})\">Delete</button>\r\n                    </td>\r\n                `;\r\n                tableBody.appendChild(row);\r\n            });\r\n        });\r\n});\r\n\r\ndocument.getElementById('addMovie').addEventListener('click', function() {\r\n    const title = document.getElementById('title').value;\r\n    const director = document.getElementById('director').value;\r\n\r\n    fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ title, director })\r\n    })\r\n        .then(response => response.json())\r\n        .then(() => {\r\n            alert('Movie added successfully!');\r\n            document.getElementById('getMovies').click();\r\n        });\r\n});\r\n\r\nfunction updateMovie(id) {\r\n    const newTitle = prompt('Enter new title:');\r\n    const newDirector = prompt('Enter new director:');\r\n\r\n    fetch(`${apiUrl}/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ title: newTitle, director: newDirector })\r\n    })\r\n        .then(response => response.json())\r\n        .then(() => {\r\n            alert('Movie updated successfully!');\r\n            document.getElementById('getMovies').click();\r\n        });\r\n}\r\n\r\nfunction editMovie(id) {\r\n    const newTitle = prompt('Enter new title:');\r\n\r\n    const patchData = {};\r\n    if (newTitle) patchData.title = newTitle;\r\n\r\n    fetch(`${apiUrl}/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(patchData)\r\n    })\r\n        .then(response => response.json())\r\n        .then(() => {\r\n            alert('Movie partially updated successfully!');\r\n            document.getElementById('getMovies').click();\r\n        });\r\n}\r\n\r\nfunction deleteMovie(id) {\r\n    if (confirm('Are you sure you want to delete this movie?')) {\r\n        fetch(`${apiUrl}/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(() => {\r\n                alert('Movie deleted successfully!');\r\n                document.getElementById('getMovies').click();\r\n            });\r\n    }\r\n}"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}